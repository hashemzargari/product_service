version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: product_service_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - logs:/var/www/logs
      - cache:/var/www/var/cache
      - routes_cache:/var/www/var/cache/routes
    networks:
      - product_service_network
    environment:
      - APP_ENV=${APP_ENV:-local}
    depends_on:
      - db

  nginx:
    image: nginx:alpine
    container_name: product_service_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - logs:/var/www/logs
      - cache:/var/www/var/cache
      - routes_cache:/var/www/var/cache/routes
    networks:
      - product_service_network
    depends_on:
      - app

  db:
    image: postgres:15
    container_name: product_service_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-product_service}
      POSTGRES_USER: ${DB_USERNAME:-product_service}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-root}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - product_service_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: product_service_pgadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    networks:
      - product_service_network
    depends_on:
      - db

networks:
  product_service_network:
    driver: bridge

volumes:
  dbdata:
    driver: local
  logs:
    driver: local
  cache:
    driver: local
  routes_cache:
    driver: local